pipeline {
    agent {
        label 'AGENT-1'
    }
    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    parameters {
        choice(name: 'action', choices: ['VPC', 'SG','Destroy'], description: 'Pick something')
    }
    stages {
        // stage('Init') {
        //     steps {
        //        sh """
        //         pwd
        //         cd 00-vpc
        //         terraform init -reconfigure
        //         pwd
        //         cd ../10-sg/
        //         pwd
        //         terraform init -reconfigure
        //         cd ../20-db/
        //         terraform init -reconfigure
        //         cd ../40-vpn/
        //         terraform init -reconfigure
        //         cd ../50-app-alb/
        //         terraform init -reconfigure
        //         cd ../70-acm/
        //         terraform init -reconfigure
        //         cd ../80-web-alb/
        //         terraform init -reconfigure
        //         cd ../100-cdn/
        //         terraform init -reconfigure
        //        """
        //     }
        // }
        // stage('Plan') {
        //     when {
        //         expression{
        //             params.action == 'Apply'
        //         }
        //     }
        //     steps {
        //         sh """
        //         cd 00-vpc
        //         terraform plan
        //         cd 10-sg
        //         terraform plan
        //         cd 20-db
        //         terraform plan
        //         cd 40-vpn
        //         terraform plan
        //         cd 50-app-alb
        //         terraform plan
        //         cd 70-acm
        //         terraform plan
        //         cd 80-web-alb
        //         terraform plan
        //         cd 100-cdn
        //         terraform plan
        //         """
        //     }
        // }

    stage('VPC') {
            steps {
                sh """
                cd 00-vpc
                terraform init -reconfigure
                terraform plan
                terraform apply -auto-approve
                """
            }
        }
    stage('SG') {
            steps {
                sh """
                cd 10-sg
                terraform init -reconfigure
                terraform plan
                terraform apply -auto-approve
                """
            }
        }
    stage('DB') {
            steps {
                sh """
                cd 20-db
                terraform init -reconfigure
                terraform plan
                terraform apply -auto-approve
                """
            }
    stage('VPN') {
            steps {
                sh """
                cd 40-vpn
                terraform init -reconfigure
                terraform plan
                terraform apply -auto-approve
                """
            }
        }
    stage('APP-ALB') {
            steps {
                sh """
                cd 50-app-alb
                terraform init -reconfigure
                terraform plan
                terraform apply -auto-approve
                """
            }
        }
    stage('ACM') {
            steps {
                sh """
                cd 70-acm
                terraform init -reconfigure
                terraform plan
                terraform apply -auto-approve
                """
            }
        }
    stage('WEB-ALB') {
            steps {
                sh """
                cd 80-web-alb
                terraform init -reconfigure
                terraform plan
                terraform apply -auto-approve
                """
            }
        }
    stage('CDN') {
            steps {
                sh """
                cd 100-cdn
                terraform init -reconfigure
                terraform plan
                terraform apply -auto-approve
                """
            }
        }

        stage('Destroy') {
            when {
                expression{
                    params.action == 'Destroy'
                }
            }
            steps {
                sh """
                cd 100-cdn
                terraform destroy -auto-approve
                cd 80-web-alb
                terraform destroy -auto-approve
                cd 70-acm
                terraform destroy -auto-approve
                cd 50-app-alb
                terraform destroy -auto-approve
                cd 40-vpn
                terraform destroy -auto-approve
                cd 20-db
                terraform destroy -auto-approve
                cd 10-sg
                terraform destroy -auto-approve
                cd 00-vpc
                terraform destroy -auto-approve
                """
            }
        }
    }
    post { 
        always { 
            echo 'I will always say Hello again!'
            deleteDir()
        }
        success { 
            echo 'I will run when pipeline is success'
        }
        failure { 
            echo 'I will run when pipeline is failure'
        }
    }
}