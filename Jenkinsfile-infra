pipeline {
    agent {
        label 'AGENT-1'
    }
    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    parameters {
        choice(name: 'action', choices: ['Destroy'], description: 'Pick something')
    }
    stages {
        stage('VPC') {
            steps {
                sh """
                cd 00-vpc
                terraform init -reconfigure
                terraform plan
                terraform apply -auto-approve
                """
            }
        }
        stage('SG') {
            steps {
                sh """
                cd 10-sg
                terraform init -reconfigure
                terraform plan
                terraform apply -auto-approve
                """
            }
        }
        stage('DB') {
            steps {
                sh """
                cd 20-db
                terraform init -reconfigure
                terraform plan
                terraform apply -auto-approve
                """
            }
        }
        stage('VPN') {
            steps {
                sh """
                cd 40-vpn
                terraform init -reconfigure
                terraform plan
                terraform apply -auto-approve
                """
            }
        }
        stage('APP-ALB') {
            steps {
                sh """
                cd 50-app-alb
                terraform init -reconfigure
                terraform plan
                terraform apply -auto-approve
                """
            }
        }
        stage('ACM') {
            steps {
                sh """
                cd 70-acm
                terraform init -reconfigure
                terraform plan
                terraform apply -auto-approve
                """
            }
        }
        stage('WEB-ALB') {
            steps {
                sh """
                cd 80-web-alb
                terraform init -reconfigure
                terraform plan
                terraform apply -auto-approve
                """
            }
        }
        stage('CDN') {
            steps {
                sh """
                cd 100-cdn
                terraform init -reconfigure
                terraform plan
                terraform apply -auto-approve
                """
            }
        }
        stage('Destroy') {
            when {
                expression{
                    params.action == 'Destroy'
                }
            }
            steps {
                sh """
                cd 100-cdn
                terraform destroy -auto-approve
                cd 80-web-alb
                terraform destroy -auto-approve
                cd 70-acm
                terraform destroy -auto-approve
                cd 50-app-alb
                terraform destroy -auto-approve
                cd 40-vpn
                terraform destroy -auto-approve
                cd 20-db
                terraform destroy -auto-approve
                cd 10-sg
                terraform destroy -auto-approve
                cd 00-vpc
                terraform destroy -auto-approve
                """
            }
        }
    }
    post { 
        always { 
            echo 'I will always say Hello again!'
            deleteDir()
        }
        success { 
            echo 'I will run when pipeline is success'
        }
        failure { 
            echo 'I will run when pipeline is failure'
        }
    }
 }